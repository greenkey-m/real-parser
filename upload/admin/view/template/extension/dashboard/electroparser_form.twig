{{ header }}{{ column_left }}
<div id="content">
    <div class="page-header">
        <div class="container-fluid">
            <div class="pull-right">
                <button id="savemarkups" type="submit" form="form-dashboard" data-toggle="tooltip"
                        title="{{ button_save }}"
                        class="btn btn-primary"><i class="fa fa-save"></i></button>
                <a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i
                            class="fa fa-reply"></i></a></div>
            <h1>{{ heading_title }}</h1>
            <ul class="breadcrumb">
                {% for breadcrumb in breadcrumbs %}
                    <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
                {% endfor %}
            </ul>
        </div>
    </div>
    <div class="container-fluid">
        {% if error_warning %}
            <div class="alert alert-danger alert-dismissible"><i
                        class="fa fa-exclamation-circle"></i> {{ error_warning }}
                <button type="button" class="close" data-dismiss="alert">&times;</button>
            </div>
        {% endif %}
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><i class="fa fa-pencil"></i> {{ text_edit }}</h3>
            </div>
            <div class="panel-body">

                <form action="{{ action }}" method="post" enctype="multipart/form-data" id="form-dashboard"
                      class="form-horizontal">

                    <ul class="nav nav-tabs">
                        <li><a href="#tab-general" data-toggle="tab">{{ tab_general }}</a></li>
                        <li><a href="#tab-info" data-toggle="tab">{{ tab_info }}</a></li>
                        <li class="active"><a href="#tab-markup" data-toggle="tab">{{ tab_markup }}</a></li>
                    </ul>

                    <div class="tab-content">

                        <div class="tab-pane" id="tab-general">
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="">Select connector</label>
                                <div class="col-sm-10">
                                    <!-- Group of default radios - option 1 -->
                                    <div class="custom-control custom-radio">
                                        <input type="radio" class="custom-control-input" id="input-connector1" name="dashboard_electroparser_connector">
                                        <label class="custom-control-label" for="input-connector1">Электрозон</label>
                                    </div>

                                    <!-- Group of default radios - option 2 -->
                                    <div class="custom-control custom-radio">
                                        <input type="radio" class="custom-control-input" id="input-connector2" name="dashboard_electroparser_connector" checked>
                                        <label class="custom-control-label" for="input-connector2">IT-Partner</label>
                                    </div>

                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="tab-info">

                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="input-width">{{ entry_width }}</label>
                                <div class="col-sm-10">
                                    <select name="dashboard_electroparser_width" id="input-width" class="form-control">
                                        {% for column in columns %}
                                            {% if column == dashboard_electroparser_width %}
                                                <option value="{{ column }}" selected="selected">{{ column }}</option>
                                            {% else %}
                                                <option value="{{ column }}">{{ column }}</option>
                                            {% endif %}
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="input-status">{{ entry_status }}</label>
                                <div class="col-sm-10">
                                    <select name="dashboard_electroparser_status" id="input-status"
                                            class="form-control">
                                        {% if dashboard_electroparser_status %}
                                            <option value="1" selected="selected">{{ text_enabled }}</option>
                                            <option value="0">{{ text_disabled }}</option>
                                        {% else %}
                                            <option value="1">{{ text_enabled }}</option>
                                            <option value="0" selected="selected">{{ text_disabled }}</option>
                                        {% endif %}
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label"
                                       for="input-sort-order">{{ entry_sort_order }}</label>
                                <div class="col-sm-10">
                                    <input type="text" name="dashboard_electroparser_sort_order"
                                           value="{{ dashboard_electroparser_sort_order }}"
                                           placeholder="{{ entry_sort_order }}" id="input-sort-order"
                                           class="form-control"/>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="input-sort-order">Markup</label>
                                <div class="col-sm-10">
                                    <input type="text" name="dashboard_electroparser_markup"
                                           value="{{ dashboard_electroparser_markup }}" placeholder="{{ entry_markup }}"
                                           id="input-markup" class="form-control"/>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane active" id="tab-markup">

                            <div id="app">
                                <el-button @click="getCheckedNodes">Dev: checked</el-button>
                                <el-button @click="getCheckedNodes" type="primary" disabled>Expand All</el-button>
                                <el-button @click="getCheckedNodes" type="primary" plain disabled>Collapse All</el-button>
                                <div class="custom-tree-container">
                                    <div class="block">
                                        <el-tree
                                                :data="data"
                                                show-checkbox=""
                                                node-key="id"
                                                :render-after-expand="false"
                                                :expand-on-click-node="false"
                                                ref="markupTree"
                                                @node-click="handleNodeClick"
                                        >
                                            <span class="custom-tree-node" slot-scope="{ node, data }">
                                                <span class="catname">
                                                   <el-input
                                                           v-model="node.label"
                                                           size="small"
                                                           readonly
                                                           :ref="'node'+ node.id"
                                                   ></el-input>
                                                </span>

                                                <span class="catmarkup">
                                                    <el-input
                                                            placeholder="Please input"
                                                            v-model="data.markup"
                                                            size="small"
                                                            v-bind:name="data.input"
                                                    >
                                                        <template slot="append">%</template>
                                                    </el-input>
                                                </span>
                                                <el-button
                                                        icon="el-icon-check"
                                                        type="primary"
                                                        size="small"
                                                        v-on:click="applySelected(data)"
                                                ></el-button>
                                            </span>

                                        </el-tree>

                                        {#:render-content="renderContent"#}

                                    </div>
                                </div>
                            </div>

                            <style>
                                .custom-tree-node {
                                    flex: 1;
                                    display: flex;
                                    align-items: center;
                                    justify-content: space-between;
                                    font-size: 14px;
                                    padding-right: 8px;
                                }

                                .el-tree-node__content {
                                    height: 55px !important;
                                }
                                .cat-name {
                                    flex-grow: 10;
                                    padding: 0 10px;
                                }
                            </style>

                            <script>
                                $(document).ready(function () {

                                    let id = 1000;

                                    var Main = {
                                        data() {
                                            return {
                                                data: {{ categories }}
                                            }
                                        },

                                        methods: {
                                            append(data) {
                                                const newChild = {id: id++, label: 'testtest', children: []};
                                                if (!data.children) {
                                                    this.$set(data, 'children', []);
                                                }
                                                data.children.push(newChild);

                                            },

                                            remove(node, data) {
                                                const parent = node.parent;
                                                const children = parent.data.children || parent.data;
                                                const index = children.findIndex(d => d.id === data.id);
                                                children.splice(index, 1);
                                            },
                                            renderContent(h, { node, data, store }) {
                                                return h('span', null, [h('span', null, data.markup)]);
                                            },
                                            handleNodeClick(data) {
                                                //console.log(data.markup);
                                            },
                                            applySelected(nodeDataObj) {
                                                //console.log(nodeid);
                                                //let markup = this.$refs.markupTree.getNode(nodeid).data.markup;
                                                let markup = nodeDataObj.markup;
                                                console.log(markup);
                                                let checked = this.$refs.markupTree.getCheckedNodes();
                                                checked.forEach(function(item, i, arr) {
                                                    item.markup = markup;
                                                });
                                                console.log(checked);
                                            },
                                            getCheckedNodes() {
                                                console.log(this.$refs.markupTree.getCheckedNodes());
                                            }

                                        }
                                    };
                                    var Ctor = Vue.extend(Main)
                                    new Ctor().$mount('#app')

                                });

                            </script>


                            <div>Group operations under checkboxed items - set markup</div>
                            <div> Search and select items! right panel</div>
                            <div>Добавлять выделенные в специальные группы! выбирать из списка</div>
                            <div>Вкладка по созданию групп категорий</div>
                            <div>Выделит группу манипулировать ей</div>
                            <div>Переносы из различных категорий</div>
                            <div>Если будут разные источники, нужен идентификатор источника с его ИД, а тут юзать
                                собственный ИД
                            </div>
                            выдавать все категории, и выстраивать их в дерево
                            изменять одну категорию
                            изменять категорию и дочерние

                            сделать дерево с табличной шапкой, с пояснениями. Количество товаров?

                            <div id="my_view">
                            </div>

                            <script>
                                var myModel = {
                                    name: "Ashley",
                                    age: 24
                                };

                                var myViewModel = new Vue({
                                    el: '#my_view',
                                    data: myModel
                                });
                            </script>


                        </div>

                    </div>

                </form>

            </div>
        </div>
    </div>
</div>
{{ footer }}

